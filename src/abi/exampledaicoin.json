{
    "contractName": "ExampleDaiCoin",
    "abi": [
      {
        "constant": true,
        "inputs": [],
        "name": "name",
        "outputs": [
          {
            "name": "",
            "type": "string"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "spender",
            "type": "address"
          },
          {
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "approve",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "totalSupply",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "sender",
            "type": "address"
          },
          {
            "name": "recipient",
            "type": "address"
          },
          {
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "transferFrom",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "decimals",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "spender",
            "type": "address"
          },
          {
            "name": "addedValue",
            "type": "uint256"
          }
        ],
        "name": "increaseAllowance",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "account",
            "type": "address"
          }
        ],
        "name": "balanceOf",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [],
        "name": "symbol",
        "outputs": [
          {
            "name": "",
            "type": "string"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "spender",
            "type": "address"
          },
          {
            "name": "subtractedValue",
            "type": "uint256"
          }
        ],
        "name": "decreaseAllowance",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": false,
        "inputs": [
          {
            "name": "recipient",
            "type": "address"
          },
          {
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "transfer",
        "outputs": [
          {
            "name": "",
            "type": "bool"
          }
        ],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "constant": true,
        "inputs": [
          {
            "name": "owner",
            "type": "address"
          },
          {
            "name": "spender",
            "type": "address"
          }
        ],
        "name": "allowance",
        "outputs": [
          {
            "name": "",
            "type": "uint256"
          }
        ],
        "payable": false,
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "from",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "to",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "Transfer",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "name": "owner",
            "type": "address"
          },
          {
            "indexed": true,
            "name": "spender",
            "type": "address"
          },
          {
            "indexed": false,
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "Approval",
        "type": "event"
      },
      {
        "constant": false,
        "inputs": [],
        "name": "mintTokens",
        "outputs": [],
        "payable": false,
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"},{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"recipient\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"mintTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/matthewblack/atomicloans/atomicloans-eth-contracts/contracts/ExampleDaiCoin.sol\":\"ExampleDaiCoin\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/matthewblack/atomicloans/atomicloans-eth-contracts/contracts/ExampleDaiCoin.sol\":{\"keccak256\":\"0x77a4d804502b183f6cb2fbbf00347e3592bdf93001076a27878efffd927638e6\",\"urls\":[\"bzzr://9f6bcf9c8bb720843b69a57112397eadf3055ef9e8c108c0d4125e3c36f318ea\",\"dweb:/ipfs/QmdWQcAm5ccNUFs7PGGaHPrxWUbRXiAZDhZWSfaeCJPnji\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzzr://51482c01bddf23793bddee43b60ab9578a62948a4f2082def24ea792a553b055\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzzr://292843005e754e752644f767477ec5ad7a1ffc91ddb18c38b8079c62f3993cad\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x65a4078c03875c25413a068ce9cfdd7e68a90f8786612d1189c89341e6e3b802\",\"urls\":[\"bzzr://fefcc5ec4e313a66c9fd38375983b5973c528e7e19b6d37c2f1ac6745295e6e2\",\"dweb:/ipfs/Qma2VeknkKA1THeubGzshWFk44BktXkXP1UKp9Un2uDSsu\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzzr://cf2d583b8dce38d0617fdcd65f2fd9f126fe17b7f683b5a515ea9d2762d8b062\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]}},\"version\":1}",
    "bytecode": "0x60c0604052600e60808190527f4578616d706c65444149436f696e00000000000000000000000000000000000060a090815262000040916003919062000257565b506040805180820190915260038082527f44414900000000000000000000000000000000000000000000000000000000006020909201918252620000879160049162000257565b5060126005553480156200009a57600080fd5b50620000ba3369115e5027ef6a631000006001600160e01b03620000c016565b620002fc565b6001600160a01b0382166200013657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6200015281600254620001db60201b6200086a1790919060201c565b6002556001600160a01b03821660009081526020818152604090912054620001859183906200086a620001db821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6000828201838110156200025057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200029a57805160ff1916838001178555620002ca565b82800160010185558215620002ca579182015b82811115620002ca578251825591602001919060010190620002ad565b50620002d8929150620002dc565b5090565b620002f991905b80821115620002d85760008155600101620002e3565b90565b610af1806200030c6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101fa57806395d89b4114610220578063a457c2d714610228578063a9059cbb14610254578063dd62ed3e14610280578063eeb9635c146102ae576100b4565b806306fdde03146100b9578063095ea7b31461013657806318160ddd1461017657806323b872dd14610190578063313ce567146101c657806339509351146101ce575b600080fd5b6100c16102b8565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101626004803603604081101561014c57600080fd5b506001600160a01b038135169060200135610346565b604080519115158252519081900360200190f35b61017e610363565b60408051918252519081900360200190f35b610162600480360360608110156101a657600080fd5b506001600160a01b03813581169160208101359091169060400135610369565b61017e6103f6565b610162600480360360408110156101e457600080fd5b506001600160a01b0381351690602001356103fc565b61017e6004803603602081101561021057600080fd5b50356001600160a01b0316610450565b6100c161046b565b6101626004803603604081101561023e57600080fd5b506001600160a01b0381351690602001356104c6565b6101626004803603604081101561026a57600080fd5b506001600160a01b038135169060200135610534565b61017e6004803603604081101561029657600080fd5b506001600160a01b0381358116916020013516610548565b6102b6610573565b005b6003805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561033e5780601f106103135761010080835404028352916020019161033e565b820191906000526020600020905b81548152906001019060200180831161032157829003601f168201915b505050505081565b600061035a610353610587565b848461058b565b50600192915050565b60025490565b6000610376848484610677565b6103ec84610382610587565b6103e785604051806060016040528060288152602001610a27602891396001600160a01b038a166000908152600160205260408120906103c0610587565b6001600160a01b03168152602081019190915260400160002054919063ffffffff6107d316565b61058b565b5060019392505050565b60055481565b600061035a610409610587565b846103e7856001600061041a610587565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff61086a16565b6001600160a01b031660009081526020819052604090205490565b6004805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561033e5780601f106103135761010080835404028352916020019161033e565b600061035a6104d3610587565b846103e785604051806060016040528060258152602001610a9860259139600160006104fd610587565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff6107d316565b600061035a610541610587565b8484610677565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61058533678ac7230489e800006108cb565b565b3390565b6001600160a01b0383166105d05760405162461bcd60e51b8152600401808060200182810382526024815260200180610a746024913960400191505060405180910390fd5b6001600160a01b0382166106155760405162461bcd60e51b81526004018080602001828103825260228152602001806109df6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166106bc5760405162461bcd60e51b8152600401808060200182810382526025815260200180610a4f6025913960400191505060405180910390fd5b6001600160a01b0382166107015760405162461bcd60e51b81526004018080602001828103825260238152602001806109bc6023913960400191505060405180910390fd5b61074481604051806060016040528060268152602001610a01602691396001600160a01b038616600090815260208190526040902054919063ffffffff6107d316565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610779908263ffffffff61086a16565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156108625760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561082757818101518382015260200161080f565b50505050905090810190601f1680156108545780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156108c4576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610926576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600254610939908263ffffffff61086a16565b6002556001600160a01b038216600090815260208190526040902054610965908263ffffffff61086a16565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a723058207416a60840a2850aba3113986cf2d7a9a52cd8124ca31a27dc9b9b56b510b91f64736f6c634300050a0032",
    "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c806370a082311161007157806370a08231146101fa57806395d89b4114610220578063a457c2d714610228578063a9059cbb14610254578063dd62ed3e14610280578063eeb9635c146102ae576100b4565b806306fdde03146100b9578063095ea7b31461013657806318160ddd1461017657806323b872dd14610190578063313ce567146101c657806339509351146101ce575b600080fd5b6100c16102b8565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101626004803603604081101561014c57600080fd5b506001600160a01b038135169060200135610346565b604080519115158252519081900360200190f35b61017e610363565b60408051918252519081900360200190f35b610162600480360360608110156101a657600080fd5b506001600160a01b03813581169160208101359091169060400135610369565b61017e6103f6565b610162600480360360408110156101e457600080fd5b506001600160a01b0381351690602001356103fc565b61017e6004803603602081101561021057600080fd5b50356001600160a01b0316610450565b6100c161046b565b6101626004803603604081101561023e57600080fd5b506001600160a01b0381351690602001356104c6565b6101626004803603604081101561026a57600080fd5b506001600160a01b038135169060200135610534565b61017e6004803603604081101561029657600080fd5b506001600160a01b0381358116916020013516610548565b6102b6610573565b005b6003805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561033e5780601f106103135761010080835404028352916020019161033e565b820191906000526020600020905b81548152906001019060200180831161032157829003601f168201915b505050505081565b600061035a610353610587565b848461058b565b50600192915050565b60025490565b6000610376848484610677565b6103ec84610382610587565b6103e785604051806060016040528060288152602001610a27602891396001600160a01b038a166000908152600160205260408120906103c0610587565b6001600160a01b03168152602081019190915260400160002054919063ffffffff6107d316565b61058b565b5060019392505050565b60055481565b600061035a610409610587565b846103e7856001600061041a610587565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff61086a16565b6001600160a01b031660009081526020819052604090205490565b6004805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561033e5780601f106103135761010080835404028352916020019161033e565b600061035a6104d3610587565b846103e785604051806060016040528060258152602001610a9860259139600160006104fd610587565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff6107d316565b600061035a610541610587565b8484610677565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61058533678ac7230489e800006108cb565b565b3390565b6001600160a01b0383166105d05760405162461bcd60e51b8152600401808060200182810382526024815260200180610a746024913960400191505060405180910390fd5b6001600160a01b0382166106155760405162461bcd60e51b81526004018080602001828103825260228152602001806109df6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166106bc5760405162461bcd60e51b8152600401808060200182810382526025815260200180610a4f6025913960400191505060405180910390fd5b6001600160a01b0382166107015760405162461bcd60e51b81526004018080602001828103825260238152602001806109bc6023913960400191505060405180910390fd5b61074481604051806060016040528060268152602001610a01602691396001600160a01b038616600090815260208190526040902054919063ffffffff6107d316565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610779908263ffffffff61086a16565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156108625760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561082757818101518382015260200161080f565b50505050905090810190601f1680156108545780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156108c4576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610926576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b600254610939908263ffffffff61086a16565b6002556001600160a01b038216600090815260208190526040902054610965908263ffffffff61086a16565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a3505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a723058207416a60840a2850aba3113986cf2d7a9a52cd8124ca31a27dc9b9b56b510b91f64736f6c634300050a0032",
    "sourceMap": "127:37:32:-;90:290;127:37;;90:290;127:37;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;169:28:32;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;224:2;201:25;;231:75;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;259:42:32;265:10;277:23;-1:-1:-1;;;;;259:5:32;:42;:::i;:::-;90:290;;5962:302:56;-1:-1:-1;;;;;6037:21:56;;6029:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6120:24;6137:6;6120:12;;:16;;;;;;:24;;;;:::i;:::-;6105:12;:39;-1:-1:-1;;;;;6175:18:56;;:9;:18;;;;;;;;;;;;:30;;6198:6;;6175:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;6154:18:56;;:9;:18;;;;;;;;;;;:51;;;;6220:37;;;;;;;6154:18;;:9;;6220:37;;;;;;;;;;5962:302;;:::o;834:176:55:-;892:7;923:5;;;946:6;;;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:55:o;90:290:32:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;90:290:32;;;-1:-1:-1;90:290:32;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
    "deployedSourceMap": "90:290:32:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;90:290:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;127:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;127:37:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2500:149:56;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2500:149:56;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1559:89;;;:::i;:::-;;;;;;;;;;;;;;;;3107:300;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3107:300:56;;;;;;;;;;;;;;;;;:::i;201:25:32:-;;;:::i;3802:207:56:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3802:207:56;;;;;;;;:::i;1706:108::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1706:108:56;-1:-1:-1;;;;;1706:108:56;;:::i;169:28:32:-;;;:::i;4496:258:56:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4496:258:56;;;;;;;;:::i;2017:155::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2017:155:56;;;;;;;;:::i;2230:132::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2230:132:56;;;;;;;;;;:::i;310:68:32:-;;;:::i;:::-;;127:37;;;;;;;;;;;;;;;-1:-1:-1;;127:37:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2500:149:56:-;2566:4;2582:39;2591:12;:10;:12::i;:::-;2605:7;2614:6;2582:8;:39::i;:::-;-1:-1:-1;2638:4:56;2500:149;;;;:::o;1559:89::-;1629:12;;1559:89;:::o;3107:300::-;3196:4;3212:36;3222:6;3230:9;3241:6;3212:9;:36::i;:::-;3258:121;3267:6;3275:12;:10;:12::i;:::-;3289:89;3327:6;3289:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3289:19:56;;;;;;:11;:19;;;;;;3309:12;:10;:12::i;:::-;-1:-1:-1;;;;;3289:33:56;;;;;;;;;;;;-1:-1:-1;3289:33:56;;;:89;;:37;:89;:::i;:::-;3258:8;:121::i;:::-;-1:-1:-1;3396:4:56;3107:300;;;;;:::o;201:25:32:-;;;;:::o;3802:207:56:-;3882:4;3898:83;3907:12;:10;:12::i;:::-;3921:7;3930:50;3969:10;3930:11;:25;3942:12;:10;:12::i;:::-;-1:-1:-1;;;;;3930:25:56;;;;;;;;;;;;;;;;;-1:-1:-1;3930:25:56;;;:34;;;;;;;;;;;:50;:38;:50;:::i;1706:108::-;-1:-1:-1;;;;;1789:18:56;1763:7;1789:18;;;;;;;;;;;;1706:108::o;169:28:32:-;;;;;;;;;;;;;;;-1:-1:-1;;169:28:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4496:258:56;4581:4;4597:129;4606:12;:10;:12::i;:::-;4620:7;4629:96;4668:15;4629:96;;;;;;;;;;;;;;;;;:11;:25;4641:12;:10;:12::i;:::-;-1:-1:-1;;;;;4629:25:56;;;;;;;;;;;;;;;;;-1:-1:-1;4629:25:56;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;2017:155::-;2086:4;2102:42;2112:12;:10;:12::i;:::-;2126:9;2137:6;2102:9;:42::i;2230:132::-;-1:-1:-1;;;;;2328:18:56;;;2302:7;2328:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;2230:132::o;310:68:32:-;346:27;352:10;364:8;346:5;:27::i;:::-;310:68::o;788:96:51:-;867:10;788:96;:::o;7351:332:56:-;-1:-1:-1;;;;;7444:19:56;;7436:68;;;;-1:-1:-1;;;7436:68:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7522:21:56;;7514:68;;;;-1:-1:-1;;;7514:68:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7593:18:56;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;7644:32;;;;;;;;;;;;;;;;;7351:332;;;:::o;5228:464::-;-1:-1:-1;;;;;5325:20:56;;5317:70;;;;-1:-1:-1;;;5317:70:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5405:23:56;;5397:71;;;;-1:-1:-1;;;5397:71:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5499;5521:6;5499:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5499:17:56;;:9;:17;;;;;;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;5479:17:56;;;:9;:17;;;;;;;;;;;:91;;;;5603:20;;;;;;;:32;;5628:6;5603:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;5580:20:56;;;:9;:20;;;;;;;;;;;;:55;;;;5650:35;;;;;;;5580:20;;5650:35;;;;;;;;;;;;;5228:464;;;:::o;1732:187:55:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:55;;;1732:187::o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:55:o;5962:302:56:-;-1:-1:-1;;;;;6037:21:56;;6029:65;;;;;-1:-1:-1;;;6029:65:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;6120:12;;:24;;6137:6;6120:24;:16;:24;:::i;:::-;6105:12;:39;-1:-1:-1;;;;;6175:18:56;;:9;:18;;;;;;;;;;;:30;;6198:6;6175:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;6154:18:56;;:9;:18;;;;;;;;;;;:51;;;;6220:37;;;;;;;6154:18;;:9;;6220:37;;;;;;;;;;5962:302;;:::o",
    "source": "pragma solidity 0.5.10;\n\nimport 'openzeppelin-solidity/contracts/token/ERC20/ERC20.sol';\n\ncontract ExampleDaiCoin is ERC20 {\n  string public name = \"ExampleDAICoin\"; \n  string public symbol = \"DAI\";\n  uint public decimals = 18;\n\n  constructor () public {\n    _mint(msg.sender, 82020000000000000000000);\n  }\n\n  function mintTokens () public {\n    _mint(msg.sender, 10 ether);\n  }\n}",
    "sourcePath": "/Users/matthewblack/atomicloans/atomicloans-eth-contracts/contracts/ExampleDaiCoin.sol",
    "ast": {
      "absolutePath": "/Users/matthewblack/atomicloans/atomicloans-eth-contracts/contracts/ExampleDaiCoin.sol",
      "exportedSymbols": {
        "ExampleDaiCoin": [
          14504
        ]
      },
      "id": 14505,
      "nodeType": "SourceUnit",
      "nodes": [
        {
          "id": 14471,
          "literals": [
            "solidity",
            "0.5",
            ".10"
          ],
          "nodeType": "PragmaDirective",
          "src": "0:23:32"
        },
        {
          "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
          "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
          "id": 14472,
          "nodeType": "ImportDirective",
          "scope": 14505,
          "sourceUnit": 24484,
          "src": "25:63:32",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "baseContracts": [
            {
              "arguments": null,
              "baseName": {
                "contractScope": null,
                "id": 14473,
                "name": "ERC20",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 24483,
                "src": "117:5:32",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC20_$24483",
                  "typeString": "contract ERC20"
                }
              },
              "id": 14474,
              "nodeType": "InheritanceSpecifier",
              "src": "117:5:32"
            }
          ],
          "contractDependencies": [
            23615,
            24483,
            24654
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "id": 14504,
          "linearizedBaseContracts": [
            14504,
            24483,
            24654,
            23615
          ],
          "name": "ExampleDaiCoin",
          "nodeType": "ContractDefinition",
          "nodes": [
            {
              "constant": false,
              "id": 14477,
              "name": "name",
              "nodeType": "VariableDeclaration",
              "scope": 14504,
              "src": "127:37:32",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage",
                "typeString": "string"
              },
              "typeName": {
                "id": 14475,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "127:6:32",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "value": {
                "argumentTypes": null,
                "hexValue": "4578616d706c65444149436f696e",
                "id": 14476,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "148:16:32",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_4326a54ca38cc7e5c88a870b5e0eb3380cafc81f438d81aa5b5590aff9b3d2c7",
                  "typeString": "literal_string \"ExampleDAICoin\""
                },
                "value": "ExampleDAICoin"
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "id": 14480,
              "name": "symbol",
              "nodeType": "VariableDeclaration",
              "scope": 14504,
              "src": "169:28:32",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage",
                "typeString": "string"
              },
              "typeName": {
                "id": 14478,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "169:6:32",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "value": {
                "argumentTypes": null,
                "hexValue": "444149",
                "id": 14479,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "192:5:32",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_a5e92f3efb6826155f1f728e162af9d7cda33a574a1153b58f03ea01cc37e568",
                  "typeString": "literal_string \"DAI\""
                },
                "value": "DAI"
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "id": 14483,
              "name": "decimals",
              "nodeType": "VariableDeclaration",
              "scope": 14504,
              "src": "201:25:32",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 14481,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "201:4:32",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "argumentTypes": null,
                "hexValue": "3138",
                "id": 14482,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "224:2:32",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_18_by_1",
                  "typeString": "int_const 18"
                },
                "value": "18"
              },
              "visibility": "public"
            },
            {
              "body": {
                "id": 14492,
                "nodeType": "Block",
                "src": "253:53:32",
                "statements": [
                  {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 14487,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24669,
                            "src": "265:3:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 14488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "265:10:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "3832303230303030303030303030303030303030303030",
                          "id": 14489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "277:23:32",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_82020000000000000000000_by_1",
                            "typeString": "int_const 82020000000000000000000"
                          },
                          "value": "82020000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_82020000000000000000000_by_1",
                            "typeString": "int_const 82020000000000000000000"
                          }
                        ],
                        "id": 14486,
                        "name": "_mint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24367,
                        "src": "259:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256)"
                        }
                      },
                      "id": 14490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "259:42:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 14491,
                    "nodeType": "ExpressionStatement",
                    "src": "259:42:32"
                  }
                ]
              },
              "documentation": null,
              "id": 14493,
              "implemented": true,
              "kind": "constructor",
              "modifiers": [],
              "name": "",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 14484,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "243:2:32"
              },
              "returnParameters": {
                "id": 14485,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "253:0:32"
              },
              "scope": 14504,
              "src": "231:75:32",
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            {
              "body": {
                "id": 14502,
                "nodeType": "Block",
                "src": "340:38:32",
                "statements": [
                  {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 14497,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24669,
                            "src": "352:3:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 14498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "352:10:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 14499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "364:8:32",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          }
                        ],
                        "id": 14496,
                        "name": "_mint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24367,
                        "src": "346:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256)"
                        }
                      },
                      "id": 14500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "346:27:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 14501,
                    "nodeType": "ExpressionStatement",
                    "src": "346:27:32"
                  }
                ]
              },
              "documentation": null,
              "id": 14503,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "mintTokens",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 14494,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "330:2:32"
              },
              "returnParameters": {
                "id": 14495,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "340:0:32"
              },
              "scope": 14504,
              "src": "310:68:32",
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            }
          ],
          "scope": 14505,
          "src": "90:290:32"
        }
      ],
      "src": "0:380:32"
    },
    "legacyAST": {
      "absolutePath": "/Users/matthewblack/atomicloans/atomicloans-eth-contracts/contracts/ExampleDaiCoin.sol",
      "exportedSymbols": {
        "ExampleDaiCoin": [
          14504
        ]
      },
      "id": 14505,
      "nodeType": "SourceUnit",
      "nodes": [
        {
          "id": 14471,
          "literals": [
            "solidity",
            "0.5",
            ".10"
          ],
          "nodeType": "PragmaDirective",
          "src": "0:23:32"
        },
        {
          "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
          "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
          "id": 14472,
          "nodeType": "ImportDirective",
          "scope": 14505,
          "sourceUnit": 24484,
          "src": "25:63:32",
          "symbolAliases": [],
          "unitAlias": ""
        },
        {
          "baseContracts": [
            {
              "arguments": null,
              "baseName": {
                "contractScope": null,
                "id": 14473,
                "name": "ERC20",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 24483,
                "src": "117:5:32",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC20_$24483",
                  "typeString": "contract ERC20"
                }
              },
              "id": 14474,
              "nodeType": "InheritanceSpecifier",
              "src": "117:5:32"
            }
          ],
          "contractDependencies": [
            23615,
            24483,
            24654
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "id": 14504,
          "linearizedBaseContracts": [
            14504,
            24483,
            24654,
            23615
          ],
          "name": "ExampleDaiCoin",
          "nodeType": "ContractDefinition",
          "nodes": [
            {
              "constant": false,
              "id": 14477,
              "name": "name",
              "nodeType": "VariableDeclaration",
              "scope": 14504,
              "src": "127:37:32",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage",
                "typeString": "string"
              },
              "typeName": {
                "id": 14475,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "127:6:32",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "value": {
                "argumentTypes": null,
                "hexValue": "4578616d706c65444149436f696e",
                "id": 14476,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "148:16:32",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_4326a54ca38cc7e5c88a870b5e0eb3380cafc81f438d81aa5b5590aff9b3d2c7",
                  "typeString": "literal_string \"ExampleDAICoin\""
                },
                "value": "ExampleDAICoin"
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "id": 14480,
              "name": "symbol",
              "nodeType": "VariableDeclaration",
              "scope": 14504,
              "src": "169:28:32",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage",
                "typeString": "string"
              },
              "typeName": {
                "id": 14478,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "169:6:32",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "value": {
                "argumentTypes": null,
                "hexValue": "444149",
                "id": 14479,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "192:5:32",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_a5e92f3efb6826155f1f728e162af9d7cda33a574a1153b58f03ea01cc37e568",
                  "typeString": "literal_string \"DAI\""
                },
                "value": "DAI"
              },
              "visibility": "public"
            },
            {
              "constant": false,
              "id": 14483,
              "name": "decimals",
              "nodeType": "VariableDeclaration",
              "scope": 14504,
              "src": "201:25:32",
              "stateVariable": true,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 14481,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "201:4:32",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "value": {
                "argumentTypes": null,
                "hexValue": "3138",
                "id": 14482,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "224:2:32",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_18_by_1",
                  "typeString": "int_const 18"
                },
                "value": "18"
              },
              "visibility": "public"
            },
            {
              "body": {
                "id": 14492,
                "nodeType": "Block",
                "src": "253:53:32",
                "statements": [
                  {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 14487,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24669,
                            "src": "265:3:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 14488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "265:10:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "3832303230303030303030303030303030303030303030",
                          "id": 14489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "277:23:32",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_82020000000000000000000_by_1",
                            "typeString": "int_const 82020000000000000000000"
                          },
                          "value": "82020000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_82020000000000000000000_by_1",
                            "typeString": "int_const 82020000000000000000000"
                          }
                        ],
                        "id": 14486,
                        "name": "_mint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24367,
                        "src": "259:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256)"
                        }
                      },
                      "id": 14490,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "259:42:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 14491,
                    "nodeType": "ExpressionStatement",
                    "src": "259:42:32"
                  }
                ]
              },
              "documentation": null,
              "id": 14493,
              "implemented": true,
              "kind": "constructor",
              "modifiers": [],
              "name": "",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 14484,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "243:2:32"
              },
              "returnParameters": {
                "id": 14485,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "253:0:32"
              },
              "scope": 14504,
              "src": "231:75:32",
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            {
              "body": {
                "id": 14502,
                "nodeType": "Block",
                "src": "340:38:32",
                "statements": [
                  {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 14497,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24669,
                            "src": "352:3:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 14498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "352:10:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 14499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "364:8:32",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          }
                        ],
                        "id": 14496,
                        "name": "_mint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24367,
                        "src": "346:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256)"
                        }
                      },
                      "id": 14500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "346:27:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 14501,
                    "nodeType": "ExpressionStatement",
                    "src": "346:27:32"
                  }
                ]
              },
              "documentation": null,
              "id": 14503,
              "implemented": true,
              "kind": "function",
              "modifiers": [],
              "name": "mintTokens",
              "nodeType": "FunctionDefinition",
              "parameters": {
                "id": 14494,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "330:2:32"
              },
              "returnParameters": {
                "id": 14495,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "340:0:32"
              },
              "scope": 14504,
              "src": "310:68:32",
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            }
          ],
          "scope": 14505,
          "src": "90:290:32"
        }
      ],
      "src": "0:380:32"
    },
    "compiler": {
      "name": "solc",
      "version": "0.5.10+commit.5a6ea5b1.Emscripten.clang"
    },
    "networks": {
      "1582225998705": {
        "events": {
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "to",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event",
            "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
          },
          "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "name": "spender",
                "type": "address"
              },
              {
                "indexed": false,
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event",
            "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
          }
        },
        "links": {},
        "address": "0xe77a4Fe5b78f5D916CFa156Bc7C23e8FfC36fD44",
        "transactionHash": "0xcbb95d8bcaeab3d95dfc6d4f132de7fe23b1b77f646b546e93949e553c625f6c"
      }
    },
    "schemaVersion": "3.0.11",
    "updatedAt": "2020-02-20T19:13:56.203Z",
    "devdoc": {
      "methods": {
        "allowance(address,address)": {
          "details": "See {IERC20-allowance}."
        },
        "approve(address,uint256)": {
          "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
        },
        "balanceOf(address)": {
          "details": "See {IERC20-balanceOf}."
        },
        "decreaseAllowance(address,uint256)": {
          "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
        },
        "increaseAllowance(address,uint256)": {
          "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
        },
        "totalSupply()": {
          "details": "See {IERC20-totalSupply}."
        },
        "transfer(address,uint256)": {
          "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
        },
        "transferFrom(address,address,uint256)": {
          "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
        }
      }
    },
    "userdoc": {
      "methods": {}
    }
  }